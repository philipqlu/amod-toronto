<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE config SYSTEM "./dtd/config_v2.dtd">

<config>
	<module name="av">
		<param name="allowedLinkMode" value="car" />
		<param name="enableDistanceAnalysis" value="false" />
		<param name="numberOfParallelRouters" value="4" />
		<param name="passengerAnalysisInterval" value="0" />
		<param name="useAccessEgress" value="false" />
		<param name="vehicleAnalysisInterval" value="0" />
		<parameterset type="operator">
			<param name="allowedLinkAttribute" value="null" />
			<param name="cleanNetwork" value="false" />
			<param name="id" value="default" />
			<param name="predictRoutePrice" value="false" />
			<param name="predictRouteTravelTime" value="true" />
			<parameterset type="dispatcher">
				<param name="type" value="DemandSupplyBalancingDispatcher" />
				<param name="dispatchPeriod" value="10" />
			</parameterset>
			<parameterset type="generator">
				<param name="numberOfVehicles" value="500" />
				<param name="type" value="PopulationDensity" />
				<param name="vehicleType" value="null" />
			</parameterset>
			<parameterset type="pricing">
				<param name="pricePerKm" value="0.001" />
				<param name="pricePerMin" value="0.0" />
				<param name="pricePerTrip" value="3.0" />
				<param name="spatialBillingInterval" value="1.0" />
				<param name="temporalBillingInterval" value="1.0" />
			</parameterset>
			<parameterset type="router">
				<param name="type" value="TaxiTravelTimeRouter" />
			</parameterset>
			<parameterset type="timing">
				<param name="dropoffDurationPerPassenger" value="0.0" />
				<param name="minimumDropoffDurationPerStop" value="10.0" />
				<param name="pickupDurationPerPassenger" value="0.0" />
				<param name="minimumPickupDurationPerStop" value="15.0" />
			</parameterset>
		</parameterset>
		<parameterset type="scoring">
			<param name="marginalUtilityOfWaiting" value="-1.0" />
			<param name="stuckUtility" value="-1000.0" />
			<param name="subpopulation" value="null" />
		</parameterset>
	</module>

	<module name="network">
		<param name="inputNetworkFile" value="network.xml.gz" />
	</module>

	<module name="plans">
		<param name="inputPlansFile" value="population.xml.gz" />
	</module>

	<module name="planscalcroute" >
		<!-- Some typical teleportation routing params are set by default, such as for walk and bike.  Setting this switch to "true" will clear them.  Note that this will also clear settings for helper modes such as for non_network_walk -->
		<param name="clearDefaultTeleportedModeParams" value="false" />
		<!-- All the modes for which the router is supposed to generate network routes (like car) -->
		<param name="networkModes" value="car" />
		<!-- strength of the randomness for the utility of money in routing under toll.  Leads to Pareto-optimal route with randomly drawn money-vs-other-attributes tradeoff. Technically the width parameter of a log-normal distribution. 3.0 seems to be a good value.  -->
		<param name="routingRandomness" value="0.0" />
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="bike" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="4.166666666666667" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="walk" />
			<param name="teleportedModeFreespeedFactor" value="null" />
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="non_network_walk" />
			<param name="teleportedModeFreespeedFactor" value="null" />
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="ride" />
			<param name="teleportedModeFreespeedFactor" value="1.0" />
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="pt" />
			<param name="teleportedModeFreespeedFactor" value="2.0" />
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>
	</module>

	<module name="controler">
		<param name="writeEventsInterval" value="1" />
		<param name="writePlansInterval" value="1" />
		<param name="eventsFileFormat" value="xml" />
		<param name="outputDirectory" value="output/001"/>
		<param name="firstIteration" value="0" />
		<param name="lastIteration" value="0" />
		<param name="mobsim" value="qsim" />
		<param name="overwriteFiles" value="deleteDirectoryIfExists" />
	</module>

 	<module name="qsim" >
		<param name="startTime" value="0:00:00" />
		<param name="endTime" value="30:00:00" />
		<param name="flowCapacityFactor" value="1000000000000" />
		<param name="storageCapacityFactor" value="1000000000000" />
		<param name="numberOfThreads" value="4" />
		<param name="snapshotperiod" value="00:00:10"/>

		<!-- Boolean. `true': stuck vehicles are removed, aborting the plan; `false': stuck vehicles are forced into the next link. `false' is probably the better choice. -->
		<param name="removeStuckVehicles" value="false" />

		<!-- time in seconds.  Time after which the frontmost vehicle on a link is called `stuck' if it does not move. -->
		<param name="stuckTime" value="3600.0" />
		<param name="timeStepSize" value="00:00:01" />

		<!-- `queue' for the standard queue model, `withHolesExperimental' (experimental!!) for the queue model with holes -->
		<param name="trafficDynamics" value="queue" />
		<param name="simStarttimeInterpretation" value="onlyUseStarttime" />
	</module>

	<module name="planCalcScore">
        <param name="writeExperiencedPlans" value="true" />

		<param name="BrainExpBeta" value="1.0" />

		<!-- [utils] alternative-specific constant for pt.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
		<param name="constantPt" value="-2" />

		<!-- [utils] alternative-specific constant for car.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
		<param name="constantCar" value="-2" />
        <param name="constant_av" value="8.359" />

		<!-- [utils] alternative-specific constant for walk.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
		<param name="constantWalk" value="0.0" />

		<!-- [utils/hr] utility for departing early (i.e. before the earliest end time).  Probably implemented correctly, but not tested. -->
		<param name="earlyDeparture" value="0.0" />

		<!-- [utils/hr] utility for arriving late (i.e. after the latest start time).  normally negative -->
		<param name="lateArrival" value="0.0" />

		<!-- new_score = (1-learningRate)*old_score + learningRate * score_from_mobsim.  learning rates close to zero emulate score averaging, but slow down initial convergence -->
		<param name="learningRate" value="1.0" />

		<!-- [utils/unit_of_money] conversion of money (e.g. toll, distance cost) into utils -->
		<param name="marginalUtilityOfMoney" value="1" />

		<!-- DISCOURAGED! [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility.  It is discouraged to use this but in some cases it may make sense. -->
		<param name="marginalUtlOfDistanceWalk" value="0.0" />

		<!-- [unit_of_money/m] conversion of car distance into money -->
		<param name="monetaryDistanceRateCar" value="-0.000378" />
        <param name="monetaryDistanceRate_av" value="0.0" />

		<!-- [unit_of_money/m] conversion of pt distance into money -->
		<param name="monetaryDistanceRatePt" value="0.0" />

		<!-- [utils/hr] marginal utility of doing an activity.  normally positive.  also the opportunity cost of time if agent is doing nothing. -->
		<param name="performing" value="12.86" />

		<!-- [utils/hr] additional marginal utility of traveling by car.  normally negative.  this comes on top of the opportunity cost of time -->
		<param name="traveling" value="0" />
        <param name="traveling_av" value="0" />

		<!-- [utils/hr] additional marginal utility offset of traveling by pt.  normally negative.  this comes on top of the opportunity cost of time -->
		<param name="travelingPt" value="0" />

		<!-- [utils/hr] additional marginal utility offset of traveling by foot.  normally negative.  this comes on top of the opportunity cost of time.  also see marginalUtlOfDistanceWalk -->
		<param name="travelingWalk" value="0.0"/>

		<!-- [utils] utility of switching a line (= transfer penalty).  Normally negative -->
		<param name="utilityOfLineSwitch" value="0.0"/>

		<!-- [utils/hr] utility offset for waiting.  this comes on top of the opportunity cost of time.  Probably implemented correctly, but not tested. -->
		<param name="waitingPt" value="-12.86" />
		<param name="waiting" value="-12.86" />

		<param name="activityType_0"            value="home" /> <!-- home -->
		<param name="activityPriority_0"        value="1" />
		<param name="activityTypicalDuration_0" value="13:00:00" />
		<param name="activityMinimalDuration_0" value="01:00:00" />

		<param name="activityType_1"            value="work" />
		<param name="activityPriority_1"        value="1" />
		<param name="activityTypicalDuration_1" value="09:00:00" />
		<param name="activityMinimalDuration_1" value="08:00:00" />
		<param name="activityOpeningTime_1"     value="08:00:00" />
		<param name="activityEarliestEndTime_1" value="17:00:00" />
		<param name="activityLatestStartTime_1" value="09:00:00" />
		<param name="activityClosingTime_1" value="18:00:00" />

		<param name="activityType_2"            value="secondary" />
		<param name="activityPriority_2"        value="1" />
		<param name="activityTypicalDuration_2" value="01:00:00" />
		<param name="activityMinimalDuration_2" value="00:30:00" />
		<param name="activityOpeningTime_2"     value="08:00:00" />
		<param name="activityClosingTime_2" value="20:00:00" />

	</module>

	<module name="strategy">
        <param name="maxAgentPlanMemorySize" value="5" /> <!-- 0 means unlimited -->

		<param name="ModuleProbability_1" value="0.75" />
		<param name="Module_1" value="ChangeExpBeta" />

		<param name="ModuleProbability_4" value="0.05" />
		<param name="Module_4" value="TimeAllocationMutator" />
		<param name="ModuleDisableAfterIteration_4" value="420" />
	</module>

<!-- ====================================================================== -->

	<module name="TimeAllocationMutator" >
		<param name="mutationRange" value="3600.00" />
	</module>

<!-- ====================================================================== -->

	<module name="transitRouter" >

		<!-- additional time the router allocates when a line switch happens. Can be interpreted as a 'safety' time that agents need to safely transfer from one line to another -->
		<param name="additionalTransferTime" value="0.0" />

		<!-- step size to increase searchRadius if no stops are found -->
		<param name="extensionRadius" value="500.0" />

		<!-- maximum beeline distance between stops that agents could transfer to by walking -->
		<param name="maxBeelineWalkConnectionDistance" value="300.0" />

		<!-- the radius in which stop locations are searched, given a start or target coordinate -->
		<param name="searchRadius" value="1500.0" />
	</module>


	<module name="subtourModeChoice" >

		<!-- Defines the chain-based modes, seperated by commas -->
		<param name="chainBasedModes" value="car" />

		<!-- Defines whether car availability must be considered or not. A agent has no car only if it has no license, or never access to a car -->
		<param name="considerCarAvailability" value="true" />

		<!-- Defines all the modes available, including chain-based modes, seperated by commas -->
		<param name="modes" value="car,pt,walk,av" />
	</module>

</config>
